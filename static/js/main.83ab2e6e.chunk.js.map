{"version":3,"sources":["Components/Button/button.component.jsx","Components/Card-List/Card/card.component.jsx","Components/Card-List/card-list.component.jsx","Components/Search-box/search-box-comonent.jsx","App.js","index.js"],"names":["Button","handleButtonChange","searchInput","className","onClick","Card","props","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","showSearch","setState","state","e","searchField","target","value","fetch","then","response","json","users","catch","console","log","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAWeA,G,YARA,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,mBAAoBC,EAAiB,EAAjBA,YACjC,OACI,wBAAQC,UAAU,SAASC,QAASH,EAApC,SACKC,EAAc,eAAiB,kBCO7BG,G,YAVF,SAACC,GACV,OACI,sBAAKH,UAAU,iBAAf,UACI,qBAAKI,IAAI,UAAUJ,UAAU,WAAWK,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,eAC3C,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,aCJjBC,EAAW,SAACP,GACrB,OACI,qBAAKH,UAAU,YAAf,SACCG,EAAMQ,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCChBM,G,MANG,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC7B,OACI,uBAAOf,UAAU,SAASgB,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCoDrEG,E,kDAlDb,aAAc,IAAD,8BACX,gBAmBFC,WAAa,WACX,EAAKC,SAAS,CAACrB,aAAc,EAAKsB,MAAMtB,eArB7B,EAwBbgB,aAAe,SAACO,GACd,EAAKF,SAAS,CAACG,YAAaD,EAAEE,OAAOC,SAtBrC,EAAKJ,MAAQ,CACXV,SAAU,GACVY,YAAa,GACbxB,aAAa,GANJ,E,gEAWO,IAAD,OACjB2B,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACT,SAAUmB,OACvCC,OAAM,SAAAT,GACLU,QAAQC,IAAI,qBAAsBX,Q,+BAc7B,IAAD,EACuCY,KAAKb,MAA3CV,EADD,EACCA,SAAUY,EADX,EACWA,YAAaxB,EADxB,EACwBA,YAExBoC,EAAmBxB,EAASyB,QAAQ,SAAA9B,GAAO,OAC/CA,EAAQE,KAAK6B,cAAcC,SAASf,EAAYc,kBAGlD,OACE,qCACA,oBAAIrC,UAAU,QAAd,6BACA,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,CAAQF,mBAAoBoC,KAAKf,WAAYpB,YAAaA,IACzDA,GAAe,cAAC,EAAD,CAAWe,YAAY,kBAAkBC,aAAcmB,KAAKnB,eAC5E,cAAC,EAAD,CAAUJ,SAAUwB,c,GA5CVI,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.83ab2e6e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './button.styles.css'\r\n\r\nconst Button = ({handleButtonChange, searchInput}) => {\r\n    return(\r\n        <button className=\"button\" onClick={handleButtonChange}>\r\n            {searchInput ? \"Close Search\" : \"Show Search\"}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react'\r\nimport './card.styles.css'\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" className=\"card-img\" src={`https://robohash.org/${props.monster.id}?set=set2`}/>\r\n            <h1>{props.monster.name}</h1>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport Card from './Card/card.component'\r\n\r\nexport const CardList = (props) => {\r\n    return(\r\n        <div className=\"card-list\">\r\n        {props.monsters.map(monster => \r\n            <Card key={monster.id} monster={monster}/>\r\n        )}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './search-box.styles.css';\r\n\r\nconst SearchBox = ({placeholder, handleChange}) => {\r\n    return(\r\n        <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange}/>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React, {Component} from 'react'\nimport './App.css'\nimport Button from './Components/Button/button.component'\nimport {CardList}  from './Components/Card-List/card-list.component'\nimport SearchBox from './Components/Search-box/search-box-comonent'\n\nclass App extends Component{  \n  constructor(){\n    super()\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n      searchInput: false\n    }\n  }\n\n  //When the component mounts - React renders the page\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json()) //Promise and convert response to JSON \n    .then(users => this.setState({monsters: users})) //Array Promise - set Monsters to response data\n    .catch(e => {\n      console.log(\"Error fetching api\", e)\n    })\n  } \n\n  showSearch = () => {\n    this.setState({searchInput: !this.state.searchInput})\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n  //Binds it to the state (Lexically scope -> bind to where its defined)\n\n  render(){\n    const {monsters, searchField, searchInput} = this.state;\n\n    const filteredMonsters = monsters.filter( monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return(\n      <>\n      <h1 className=\"title\">Monster Rolodex</h1>\n      <div className=\"App\">\n        <Button handleButtonChange={this.showSearch} searchInput={searchInput}/>\n        {searchInput && <SearchBox placeholder=\"Search Monsters\" handleChange={this.handleChange}/>}\n        <CardList monsters={filteredMonsters}/>\n      </div>\n      </>\n    ) \n  } \n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}